#!/usr/bin/env python3

import sys
import json


BUILD_DIR = "build"


def print_command(commands, file=sys.stdout):
    for name, args in commands.items():
        if name == 'text':
            print(args, file=file)
            continue
        elif type(args) == list:
            joined_args = ''.join(f'{{{arg}}}' for arg in args)
        elif type(args) == str:
            joined_args = f'{{{args}}}'
        elif args is None:
            joined_args = ''
        print(f'\\{name}{joined_args}', file=file)
    print(file=file)


def print_chapter(name, config, default_pre, default_post, concat=False):
    with open(f'{name}.md', 'r') as fin, \
            open(f'{BUILD_DIR}/prep-{name}.md', 'w+') as fout:
        # pre commands
        print_command(config.get('pre', default_pre), file=fout)
        print(file=fout)

        # file content
        for line in fin:
            print(line, end='', file=fout)

        # post commands
        print(file=fout)
        print_command(config.get('post', default_post), file=fout)


def standalone(style_config):
    with open(f'{BUILD_DIR}/prep-pre.md', 'w+') as fout:
        print_command(style_config.get('pre', {}), file=fout)
    for name, config in style_config['chapters'].items():
        print_chapter(name, config, {}, {})
    with open(f'{BUILD_DIR}/prep-post.md', 'w+') as fout:
        print_command(style_config.get('post', {}), file=fout)


def all(style_config):
    for name, config in style_config['chapters'].items():
        print_chapter(name, config,
                      style_config.get('pre', {}),
                      style_config.get('post', {}))


def main():
    with open('reference/metadata.json', 'r') as fin:
        config = json.load(fin)
    eval(f"{sys.argv[2]}(config['{sys.argv[1]}'])")


if __name__ == '__main__':
    main()
